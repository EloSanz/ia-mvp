name: PR Review

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  conventional-commits:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Check commit messages
        run: |
          echo "⚠️ Verificando mensajes de commit..."
          git log ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }} --pretty=format:"%s" |
          while read commit; do
            if ! echo "$commit" | grep -qE '^(feat|fix|docs|style|refactor|test|chore)(\([a-z-]+\))?: .+$'; then
              echo "❌ Commit message '$commit' no sigue el formato conventional commits"
              echo "Formato esperado: type(scope): description"
              echo "Types válidos: feat, fix, docs, style, refactor, test, chore"
              exit 1
            fi
          done
          echo "✅ Todos los commits siguen el formato correcto"

  size-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Check PR size
        run: |
          echo "⚠️ Verificando tamaño de la PR..."
          CHANGES=$(git diff --stat ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }} | tail -n 1)
          FILES_CHANGED=$(echo $CHANGES | cut -d' ' -f1)
          INSERTIONS=$(echo $CHANGES | cut -d' ' -f4)
          DELETIONS=$(echo $CHANGES | cut -d' ' -f6)
          
          if [ $FILES_CHANGED -gt 20 ]; then
            echo "❌ PR muy grande: $FILES_CHANGED archivos modificados"
            echo "Considera dividir la PR en cambios más pequeños"
            exit 1
          fi
          
          TOTAL_CHANGES=$((INSERTIONS + DELETIONS))
          if [ $TOTAL_CHANGES -gt 500 ]; then
            echo "❌ PR muy grande: $TOTAL_CHANGES líneas modificadas"
            echo "Considera dividir la PR en cambios más pequeños"
            exit 1
          fi
          
          echo "✅ Tamaño de PR aceptable"

  required-files:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Check for required files
        run: |
          echo "⚠️ Verificando archivos requeridos..."
          
          # Verificar si hay cambios en package.json sin package-lock.json
          if git diff --name-only ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }} | grep -q "package.json"; then
            if ! git diff --name-only ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }} | grep -q "package-lock.json"; then
              echo "❌ Cambios en package.json sin actualizar package-lock.json"
              exit 1
            fi
          fi
          
          # Verificar si hay migraciones sin cambios en el esquema
          if git diff --name-only ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }} | grep -q "prisma/migrations/"; then
            if ! git diff --name-only ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }} | grep -q "prisma/schema.prisma"; then
              echo "❌ Migraciones añadidas sin cambios en schema.prisma"
              exit 1
            fi
          fi
          
          echo "✅ Todos los archivos requeridos están presentes"
